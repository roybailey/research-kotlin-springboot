<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>me.roybailey</groupId>
        <artifactId>rksb-api</artifactId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>

    <groupId>me.roybailey</groupId>
    <artifactId>rksb-api-service</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Research Kotlin SpringBoot API Service</name>
    <description>Kotlin SpringBoot API Service</description>

    <properties>
        <codegen.srcdir>${project.basedir}/src/main/kotlin</codegen.srcdir>
        <codegen.distdir>${codegen.srcdir}/me/roybailey/codegen</codegen.distdir>
        <codegen.package>me.roybailey.codegen</codegen.package>

        <codegen.jooq.distdir>${codegen.distdir}/jooq</codegen.jooq.distdir>
        <codegen.jooq.package>${codegen.package}.jooq</codegen.jooq.package>
        <codegen.jooq.minimum.count>4</codegen.jooq.minimum.count>

        <codegen.api.distdir>${codegen.distdir}/api</codegen.api.distdir>
        <codegen.api.package>${codegen.package}.api</codegen.api.package>
        <codegen.api.minimum.count>2</codegen.api.minimum.count>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>me.roybailey</groupId>
                <artifactId>rksb-common-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>me.roybailey</groupId>
            <artifactId>rksb-common-lib-base</artifactId>
        </dependency>
        <dependency>
            <groupId>me.roybailey</groupId>
            <artifactId>rksb-common-lib-web</artifactId>
        </dependency>
        <dependency>
            <groupId>me.roybailey</groupId>
            <artifactId>rksb-common-lib-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>me.roybailey</groupId>
            <artifactId>rksb-api-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--
                This runs the previous code generation module on the project, passing folder values as arguments
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <echo>Running Code Generator with Apache Ant!</echo>
                                <!-- 1. delete the codegen folder contents to ensure all code is regenerated and deletes/renames are handled -->
                                <echo>Deleting Previous Code Generated Source from ${codegen.jooq.distdir}</echo>
                                <echo>Deleting Previous Code Generated Source from ${codegen.api.distdir}</echo>
                                <delete includeEmptyDirs="true" failonerror="false">
                                    <fileset dir="${codegen.jooq.distdir}" includes="**"/>
                                    <fileset dir="${codegen.api.distdir}" includes="**"/>
                                </delete>
                                <!-- 2. execute code generation project, passing required parameters for output -->
                                <echo>Running Code Generator using project.basedir=${project.basedir}</echo>
                                <java fork="true" jar="../rksb-api-generator/target/rksb-api-generator-0.1.0-SNAPSHOT.jar">
                                    <arg value="--project.basedir=${project.basedir}"/>
                                    <arg value="--project.version=${project.version}"/>
                                    <arg value="--app.codegen.base.package=${codegen.base.package}"/>
                                    <arg value="--app.datasource.main.url=${codegen.jooq.url}"/>
                                    <arg value="--app.datasource.main.username=${codegen.jooq.username}"/>
                                    <arg value="--app.datasource.main.password=${codegen.jooq.password}"/>
                                    <arg value="--app.datasource.jooq.url=${codegen.jooq.url}"/>
                                    <arg value="--app.datasource.jooq.username=${codegen.jooq.username}"/>
                                    <arg value="--app.datasource.jooq.password=${codegen.jooq.password}"/>
                                </java>
                                <!-- 3. count the files generated and validate minimum expected counts as indication of failure -->
                                <resourcecount property="codegen.jooq.count">
                                    <fileset id="codegen" dir="${codegen.jooq.distdir}" includes="**"/>
                                </resourcecount>
                                <echo message="GENERATOR CREATED (${codegen.jooq.count}/${codegen.jooq.minimum.count}) in ${codegen.jooq.distdir}"/>
                                <resourcecount property="codegen.api.count">
                                    <fileset id="codegen" dir="${codegen.api.distdir}" includes="**"/>
                                </resourcecount>
                                <echo message="GENERATOR CREATED (${codegen.api.count}/${codegen.api.minimum.count}) in ${codegen.api.distdir}"/>
                                <!-- 4. fail maven build when minimum file generation counts not acheived (these minimums should be reviewed periodically) -->
                                <fail message="GENERATOR MISSING FILES (${codegen.jooq.count}/${codegen.jooq.minimum.count}) in ${codegen.jooq.distdir}">
                                    <condition>
                                        <not>
                                            <resourcecount when="greater" count="${codegen.jooq.minimum.count}">
                                                <fileset id="codegen" dir="${codegen.jooq.distdir}" includes="**"/>
                                            </resourcecount>
                                        </not>
                                    </condition>
                                </fail>
                                <fail message="GENERATOR MISSING FILES (${codegen.api.count}/${codegen.api.minimum.count}) in ${codegen.api.distdir}">
                                    <condition>
                                        <not>
                                            <resourcecount when="greater" count="${codegen.api.minimum.count}">
                                                <fileset id="codegen" dir="${codegen.api.distdir}" includes="**"/>
                                            </resourcecount>
                                        </not>
                                    </condition>
                                </fail>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
