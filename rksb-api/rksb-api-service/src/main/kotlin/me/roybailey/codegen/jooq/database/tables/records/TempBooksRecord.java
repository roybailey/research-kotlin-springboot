/*
 * This file is generated by jOOQ.
 */
package me.roybailey.codegen.jooq.database.tables.records;


import me.roybailey.codegen.jooq.database.tables.TempBooks;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TempBooksRecord extends UpdatableRecordImpl<TempBooksRecord> implements Record5<Integer, String, String, Integer, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.temp_books.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.temp_books.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.temp_books.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.temp_books.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.temp_books.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.temp_books.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.temp_books.publicationdate</code>.
     */
    public void setPublicationdate(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.temp_books.publicationdate</code>.
     */
    public Integer getPublicationdate() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.temp_books.price</code>.
     */
    public void setPrice(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.temp_books.price</code>.
     */
    public Double getPrice() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Integer, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TempBooks.TEMP_BOOKS.ID;
    }

    @Override
    public Field<String> field2() {
        return TempBooks.TEMP_BOOKS.TITLE;
    }

    @Override
    public Field<String> field3() {
        return TempBooks.TEMP_BOOKS.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return TempBooks.TEMP_BOOKS.PUBLICATIONDATE;
    }

    @Override
    public Field<Double> field5() {
        return TempBooks.TEMP_BOOKS.PRICE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getPublicationdate();
    }

    @Override
    public Double component5() {
        return getPrice();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getPublicationdate();
    }

    @Override
    public Double value5() {
        return getPrice();
    }

    @Override
    public TempBooksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TempBooksRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public TempBooksRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TempBooksRecord value4(Integer value) {
        setPublicationdate(value);
        return this;
    }

    @Override
    public TempBooksRecord value5(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public TempBooksRecord values(Integer value1, String value2, String value3, Integer value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TempBooksRecord
     */
    public TempBooksRecord() {
        super(TempBooks.TEMP_BOOKS);
    }

    /**
     * Create a detached, initialised TempBooksRecord
     */
    public TempBooksRecord(Integer id, String title, String description, Integer publicationdate, Double price) {
        super(TempBooks.TEMP_BOOKS);

        setId(id);
        setTitle(title);
        setDescription(description);
        setPublicationdate(publicationdate);
        setPrice(price);
    }

    /**
     * Create a detached, initialised TempBooksRecord
     */
    public TempBooksRecord(me.roybailey.codegen.jooq.database.tables.pojos.TempBooks value) {
        super(TempBooks.TEMP_BOOKS);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setDescription(value.getDescription());
            setPublicationdate(value.getPublicationdate());
            setPrice(value.getPrice());
        }
    }
}
